# Extended Module Player Makefile.rules.in
# $Id: Makefile.rules.in,v 1.22 2007-08-21 17:16:02 cmatsuoka Exp $

VERSION	= 2.2.0-pre4
DATE	= Tue Aug 21 09:02:59 BRT 2007

DESTDIR	=
prefix	= $(DESTDIR)@prefix@
exec_prefix= $(DESTDIR)@prefix@
datarootdir = $(DESTDIR)@datarootdir@
BIN_DIR	= $(DESTDIR)@bindir@
LIB_DIR = $(DESTDIR)@libdir@
MAN_DIR	= $(DESTDIR)@mandir@/man1

CC	= @CC@
CFLAGS	= -c @CFLAGS@ @DEFS@ @CINCS@ #-D_DEBUG
LD	= @CC@
LDFLAGS	= -o $@ @LDFLAGS@
RANLIB	= @RANLIB@
INSTALL	= @INSTALL@

PLUGIN	= @PLUGIN@


# IRIX 6.5.10 note by Johan Hattne <hattne@ibg.uu.se>
# (Thu, 15 Feb 2001 20:20:38 +0100)
#
# I moved -laudio from just after -lXext to after -lm. It seems gcc
# [2.95.2 as supplied by the freeware.sgi.com site] has problems
# resolving the audio-symbols otherwise.

# LIBS	= @LIBS@ $(XLIBS)
LIBS	= $(XLIBS) @LIBS@
SHELL	= /bin/sh
PLATFORM= @PLATFORM@

DRIVERS	= @DRIVERS@
MIXER	= @MIXER@
PLUGIN	= @PLUGIN@

X_INC	= @X_CFLAGS@
X_LIB	= @X_LIBS@ @X_EXTRA_LIBS@
X_XMP	= @X_XMP@

LOBJS	= $(OBJS:.o=.lo)

.SUFFIXES: .c .o .lo .a .S .so

.c.o:
	$(CC) $(CFLAGS) $(XCFLAGS) -o $*.o $<

.c.lo:
	$(CC) $(CFLAGS) -fPIC $(XCFLAGS) -o $*.lo $<

.S.o:
	$(CC) $(CFLAGS) -o $*.o $<

.lo.so:
	ld -shared -o $*.so $<

dummy:

$(LIB): $(LIB)($(OBJS) $(XOBJS))
	$(RANLIB) $(LIB)

depend:
	@echo Building dependencies...
	@$(CC) $(CFLAGS) $(XCFLAGS) -MM -MG $(OBJS:.o=.c) $(XDEPS:.o=.c) >$@

clean distclean::
	rm -f *.o core errlist depend $(CFILES)
ifdef DDIRS
	@for i in $(DDIRS); do \
		if [ -d $$i ]; then \
			(cd $$i && [ -f Makefile ] && $(MAKE) $@) \
		fi \
	done; true
endif

distclean::
	rm -f $(DCFILES)

install::
ifdef DDIRS
	@for i in $(DDIRS); do \
		if [ -d $$i ]; then \
			(cd $$i && [ -f Makefile ] && $(MAKE) $@) \
		fi \
	done; true 
endif

whatsout::
	@rlog -R -L RCS/* | sed 's/.*\/\([^\/]*\),v/\1/'
ifdef DDIRS
	@for i in $(DDIRS); do \
		( cd $$i; \
		if [ -f Makefile ]; then \
			$(MAKE) whatsout; \
		else
			@rlog -R -L RCS/* | sed 's/.*\/\([^\/]*\),v/\1/'; \
		fi; ) \
	done
endif

subdist::
	cp -dp $(DFILES) $(DISTDIR)
ifdef DDIRS
	for i in $(DDIRS); do \
		mkdir $(DISTDIR)/$$i; \
		( cd $$i; \
		if [ -f Makefile ]; then \
			$(MAKE) VERSION=$(VERSION) DISTDIR=../$(DISTDIR)/$$i \
			subdist; \
		else \
			for j in *; do \
				[ -f $$j ] && cp -dp $$j ../$(DISTDIR)/$$i; \
			done; true; \
		fi; ) \
	done
endif

